<?php

namespace AppBundle\Repository;

use AppBundle\Search\SearchMatchModel;
use Doctrine\DBAL\Types\DateTimeType;

/**
 * MatchGameRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MatchGameRepository extends \Doctrine\ORM\EntityRepository
{
    public function findLast($limit = 5){
        $qb = $this->createQueryBuilder('match_game');
        $yesterday = new \DateTime();
        $yesterday->modify('+105minutes');
        $qb->where('match_game.date<:yesterday')
            ->setParameter('yesterday',$yesterday,DateTimeType::DATETIME)
            ->setMaxResults($limit)
            ->orderBy('match_game.date','DESC')
        
        ;
        
        return $qb->getQuery()->getResult(); 
        
    }
    public function findNext(){
        $qb = $this->createQueryBuilder('match_game');
        $now = new \DateTime();
        $now->modify('-105minutes');
        
        $qb->where('match_game.date>:now')
            ->setParameter('now',$now,DateTimeType::DATETIME)
            ->orderBy('match_game.date','ASC')

        ;

        return $qb->getQuery()->getOneOrNullResult();

    }
    
    public function findBySearch(SearchMatchModel $search){
        $qb = $this->createQueryBuilder('match_game');
        
        $andWhere = $qb->expr()->andX();
        if ($search->getSaison() !== null){
            $andWhere->add('match_game.saison=:saison');
            $qb->setParameter('saison',$search->getSaison())
                ;
        }   
        
        if ($search->getPlayer() !== null){
            $qb->leftJoin('match_game.players','players');
            $andWhere->add($qb->expr()->in('players.id',[$search->getPlayer()->getId()]));
//            $qb->setParameter('player',$search->getPlayer());
        }
        if ($search->getReferee() !== null){
            $andWhere->add('match_game.arbitre=:referee');
            $qb->setParameter('referee',$search->getReferee());
        }if ($search->getCoach() !== null){
            $andWhere->add('match_game.coach=:coach');
            $qb->setParameter('coach',$search->getCoach());
        }
        if ($search->getTeam() !== null){
            $orX = $qb->expr()->orX();
            $orX->add('match_game.homeTeam=:team')
                ->add('match_game.awayTeam=:team')
                ;
            $andWhere->add($orX);
            $qb->setParameter('team',$search->getTeam());
        }
        if ($andWhere->count()){
            $qb->where($andWhere);
        }
        $qb->leftJoin('match_game.saison','saison');
        $qb->orderBy('match_game.date','desc');
        
        
        return $qb->getQuery()->getResult();
        
    }
}
